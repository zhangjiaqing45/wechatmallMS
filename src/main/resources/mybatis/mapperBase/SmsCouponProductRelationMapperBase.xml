<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fante.project.business.smsCouponProductRelation.mapper.SmsCouponProductRelationMapper">
    
    <resultMap type="SmsCouponProductRelation" id="SmsCouponProductRelationResult">
        <result property="id"    column="id"    />
        <result property="couponId"    column="coupon_id"    />
        <result property="productId"    column="product_id"    />
        <result property="productName"    column="product_name"    />
        <result property="productSn"    column="product_sn"    />
    </resultMap>

    <sql id="selectSmsCouponProductRelationVo">
        select id, coupon_id, product_id, product_name, product_sn from sms_coupon_product_relation
    </sql>

    <select id="selectSmsCouponProductRelationList" parameterType="SmsCouponProductRelation" resultMap="SmsCouponProductRelationResult">
        <include refid="selectSmsCouponProductRelationVo"/>
        <where>
            <if test="couponId != null "> and coupon_id = #{couponId}</if>
            <if test="productId != null "> and product_id = #{productId}</if>
            <if test="productName != null  and productName != ''"> and product_name like concat('%', #{productName}, '%')</if>
            <if test="productSn != null  and productSn != ''"> and product_sn = #{productSn}</if>
        </where>
    </select>

    <select id="countSmsCouponProductRelation" parameterType="SmsCouponProductRelation" resultType="int">
        select count(*) from sms_coupon_product_relation
        <where>
            <if test="couponId != null "> and coupon_id = #{couponId}</if>
            <if test="productId != null "> and product_id = #{productId}</if>
            <if test="productName != null  and productName != ''"> and product_name like concat('%', #{productName}, '%')</if>
            <if test="productSn != null  and productSn != ''"> and product_sn = #{productSn}</if>
        </where>
    </select>

    <select id="checkSmsCouponProductRelationUnique" parameterType="SmsCouponProductRelation" resultType="int">
        select count(*) from sms_coupon_product_relation
        <where>
            <if test="id != null"> and id &lt;&gt; #{id}</if>
            <if test="couponId != null "> and coupon_id = #{couponId}</if>
            <if test="productId != null "> and product_id = #{productId}</if>
            <if test="productName != null  and productName != ''"> and product_name = #{productName}</if>
            <if test="productSn != null  and productSn != ''"> and product_sn = #{productSn}</if>
        </where>
    </select>


    <select id="selectSmsCouponProductRelationById" parameterType="Long" resultMap="SmsCouponProductRelationResult">
        <include refid="selectSmsCouponProductRelationVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSmsCouponProductRelation" parameterType="SmsCouponProductRelation" useGeneratedKeys="true" keyProperty="id">
        insert into sms_coupon_product_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="couponId != null ">coupon_id,</if>
            <if test="productId != null ">product_id,</if>
            <if test="productName != null  and productName != ''">product_name,</if>
            <if test="productSn != null  and productSn != ''">product_sn,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="couponId != null ">#{couponId},</if>
            <if test="productId != null ">#{productId},</if>
            <if test="productName != null  and productName != ''">#{productName},</if>
            <if test="productSn != null  and productSn != ''">#{productSn},</if>
         </trim>
    </insert>

    <update id="updateSmsCouponProductRelation" parameterType="SmsCouponProductRelation">
        update sms_coupon_product_relation
        <trim prefix="SET" suffixOverrides=",">
            <if test="couponId != null ">coupon_id = #{couponId},</if>
            <if test="productId != null ">product_id = #{productId},</if>
            <if test="productName != null  and productName != ''">product_name = #{productName},</if>
            <if test="productSn != null  and productSn != ''">product_sn = #{productSn},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSmsCouponProductRelationById" parameterType="Long">
        <!-- update sms_coupon_product_relation set del_flag = '1' where id = #{id} -->
        delete from sms_coupon_product_relation where id = #{id}
    </delete>

    <delete id="deleteSmsCouponProductRelationByIds" parameterType="String">
        update sms_coupon_product_relation set del_flag = '1' where id in
        <!-- delete from sms_coupon_product_relation where id in  -->
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>