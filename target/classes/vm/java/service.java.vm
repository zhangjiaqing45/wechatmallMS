package ${packageName}.${businessName}.service;

import ${packageName}.${businessName}.domain.${ClassName};
import java.util.List;
#if($table.tree)
import com.fante.framework.web.domain.Ztree;
#end

/**
 * ${functionName}Service接口
 *
 * @author ${author}
 * @date ${datetime}
 */
public interface I${ClassName}Service {
    /**
     * 查询${functionName}
     *
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return ${functionName}
     */
    public ${ClassName} select${ClassName}ById(${pkColumn.javaType} ${pkColumn.javaField});

    /**
     * 查询${functionName}列表
     *
     * @param ${className} ${functionName}
     * @return ${functionName}集合
     */
    public List<${ClassName}> select${ClassName}List(${ClassName} ${className});

    /**
     * 查询${functionName}数量
     *
     * @param ${className} ${functionName}
     * @return 结果
     */
    public int count${ClassName}(${ClassName} ${className});

    /**
     * 唯一校验
     *
     * @param ${className} ${functionName}
     * @return 结果
     */
    public String check${ClassName}Unique(${ClassName} ${className});

    /**
     * 新增${functionName}
     *
     * @param ${className} ${functionName}
     * @return 新增${functionName}数量
     */
    public int insert${ClassName}(${ClassName} ${className});

    /**
     * 修改${functionName}
     *
     * @param ${className} ${functionName}
     * @return 修改${functionName}数量
     */
    public int update${ClassName}(${ClassName} ${className});

    /**
     * 批量删除${functionName}
     *
     * @param ids 需要删除的数据ID
     * @return 删除${functionName}数量
     */
    public int delete${ClassName}ByIds(String ids);

    /**
     * 删除${functionName}信息
     *
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return 删除${functionName}数量
     */
    public int delete${ClassName}ById(${pkColumn.javaType} ${pkColumn.javaField});
    #if($table.tree)

        /**
         * 查询${functionName}树列表
         *
         * @return 所有${functionName}信息
         */
        public List<Ztree> select${ClassName}Tree();
    #end
}
